# wumprep.conf
#
# ========================================================================
# WUMprep - Log file Preparation for Web Usage Mining
# ------------------------------------------------------------------------
# wumprep.conf - Sample WUMprep configuration file
# $Revision: 1.7 $
#
# This configuration file is used by the WUMprep Perl scripts.
# The scripts expect this file to reside in the same directory as the
# log files to be prepared for data mining.
# You should use this file as a template - just copy it to the appropri-
# ate directory and modify it accoring to your needs.
# ========================================================================
#
# Copyright (C) 2000-2005  Carsten Pohle (cp AT cpohle de)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


# ===========================================================================
# Global settings
# ---------------------------------------------------------------------------
# The settings in this section apply to the general execution of the
# several scripts.
# ===========================================================================

[global]

# Domain: Here you might specify the domain name your log files stem
# from (this is currently not used by the scripts, but might be
# required in the future - however this definetely is useful for
# documentation purposes).

domain = www.someserver.org

# Define the log file template to be used by the log file parser
inputLogTemplate = logfileTemplate

# Currently, only 'file' is supported as operation mode. Future releases
# might also support other storages, e.g. a Web warehouse.
operationMode = file

# You should disable DNS reverse lookups if you are working offline by 
# setting it to "no", otherwise enable them by setting the option's value
# to "yes".
DNSlookups = yes

# You should always specify an output directory where the processing
# results will be stored. If no output direcotory is specified, the
# input file directory will be used.
outputDirectory = /tmp

# Specify the path of HTML template files. Currently, these are used
# by the logStatistics.pl script.
htmlTemplateDir = /tmp/html

# The serverFamily section defines server names that are to be treated
# as aliases for the main server name given as 'domain' in the [global]
# section. This is needed e.g. by the sessionizer in order to detect
# the beginning of a new session based on a foreign referrer.
# The server name given in 'domain' does not need to be repeated here,
# since it is added to the serverFamily automatically.
serverFamily =...
www.mydomain.de
some.host.mydomain.de

# Enter the filenames of the input-logs to process here (one filename
# per line). You might use the wildcards "*" and "?" to match multiple
# files. "*.log", for example, would specify every file with an filename
# extension of .log to be processed by the scripts (although it is not
# possible to set them with the config editor at the moment).
inputLogs =...
www_mydomain_de.log
www_mydomain_de.log2
www_mydomain_de.log3


# ===========================================================================
# Anonymization settings
# ---------------------------------------------------------------------------
# These settings control the execution of the WUMprep anonymizer.
# ===========================================================================

[anonymizerSettings]

# The filename extension that should be added to the output file of the
# conversion script. If left blank, the input file will be replaced.
anonOutputExtension = .anon

# If you want the anonymizer to record the mappings of real hostnames
# or IPs to their anonymous codes, specify a filename here.
anonKeyFile = anonKeys.txt


# ===========================================================================
# Logfile conversion settings
# ---------------------------------------------------------------------------
# DEPRECATED! Use transformLog.pl instead
# These settings control the execution of the WUMprep logfile converter.
# ===========================================================================

[conversionSettings]

# DEPRECATED! Use transformLog.pl instead
# The filename extension that should be added to the output file of the
# conversion script. If left blank, the input file will be replaced.
conversionOutputExtension = .clog

# ===========================================================================
# Filter log lines
# ---------------------------------------------------------------------------
# When removing irrelevant lines from the logfile, use the following
# filter criteria. You can specify which log records shall be dropped by
# the filename extension of the requested file and by the name or ip
# address of the requesting host.
# Enter one criterium by line.
#
# Regular expressions: You may enter regular expressions that tested
# against the host resp. request field of the log line. Begin the line
# with "RE: " in order to let your criterion be used directly as regexp.
# See the perl documentation for details of regexp syntax.
#
# These settings are used by the script "requestFilter.pl"
# ===========================================================================

[filterSettings]

# Specify the maximum time in seconds between successive requests of the
# same document from the same host - these requests will be treated as
# a single one.
filterDuplicateTimeout = 5


# This extension will be appended to the filtered logfiles' names
filterOutputExtension = .clean

# If the path of a request matches any of the regular expressions
# given in the following section the line is dropped in the output of
# the filter script.  An @ followed by a by a filename (e.g.,
# @filterPaths.txt) is substituted by the file content.

filterPath =...

\.ico
\.gif
\.jpg
\.jpeg
\.css
\.js
\.GIF
\.JPG
#@mydomainFilter.txt


# Specify hosts to be be excluded from the log. You may use this to
# remove your own traces in the log, for example. Don't use this mechan-
# ism for removing robots. If you know a host being a robot, better add
# a record to the file "indexers.lst" in the script directory.
filterHosts =...

www.mydomain.de
#RE:\S*\.www\.hhl\.de


# The status code filter is an "include filter", this means that only log
# lines with a status code listed below will be included in the output
# logfile. If you don't want filtering status codes at all, leave this
# section blank, otherwise enter one status code per line. You may also
# enter regular expressions.
# (See RFC 2616 for a description of the different status codes.)

filterStatusCodes =...

2\d\d   # This leaves all 2xx status codes in the log
304

# When filtering duplicated request, we have to take care that we
# distinguish between the type of requested objects. For example, an image
# file might be contained multiple times in one HTML document. Depending on
# the caching algorithm, this graphic might be requested multiple times in
# successive requests during a very short time.  For our purposes, we only
# want to recognize multiple requests of the main document. We do this by
# restricting our tests on the document types listet below. Depending on
# the web server implementatin, you might have to modify this list.
filterDuplicatesExtensions =...
.html
.htm
.cgi
.asp
.shtml
.shtm


# ===========================================================================
# sessionFilter
# ---------------------------------------------------------------------------
# The sessionFilter.pl script allows not to filter on a line-per-line basis,
# but per session.
# ===========================================================================
[sessionFilterSettings]

# Filename extension for the sessionFilter.pl script
sessionFilterOutputExtension = .sclean

# If set to 1, sessionFilter.pl leaves only the first from a series of
# successive requests to the same URL in the log.
sessionFilterRepeatedRequests = no

# A session is removed from the output when at least one of the
# session's requests originated from one of the following host ip
# addresses. When preceded by "RE: ", the filter line is treated as a
# reqular expression.
sessionFilterHostIp =...
123.234.123.234

# Same as above, but for logs with resolved hostnames
sessionFilterHostName =...
myhost.mydomain.de

# A session is removed from the output when one of the regular expressions in
# the following section matches the path of at least one of the session's
# requests.
sessionFilterPath =...
admin


# ===========================================================================
# Reverse DNS Lookup
# ---------------------------------------------------------------------------
# Try to resolve host IP addresses into hostnames. See the reverseLookup.pl
# manpage for details.
# ===========================================================================
[reverseLookupSettings]

# Filename extension for the reverseLookup.pl script
rLookupOutputExtension = .rl

# Cache file for storing reverse lookup results
rLookupCacheFile = dnscache

# ===========================================================================
# Sessionize
# ---------------------------------------------------------------------------
# Divide the log into single sessions, depending on max. page view time or
# other, more sophisticated criteria like cookies. (See the "sessionize.pl"
# manpage for details.)
# ===========================================================================

[sessionizeSettings]

# Filename extension for the output files of the sessonize script
sessionizeOutputExtension = .sess

# If this view time limit is exceeded, a new session is begun. Enter time
# in seconds.
sessionizeMaxPageViewTime = 1800

# The session ID is added at the beginning of each log line. You can
# specify the character to use for separating this ID from the rest of the
# line. If you run the script in filter mode (e.g., when using WUMprep4Weka)
# and leave sessionizeSeparator blank, sessionize.pl will store the session_id
# in a separate field prepended to the output log lines.
sessionizeSeparator = |

# If the server uses cookies to identify sessions, these can be used by the
# sessionizer. If you want to use cookie information, enter the name of the
# identifying cookie (you may use regular expression syntax), otherwise leave
# this option blank.
sessionizeIdCookie = ASPSESSIONID\S*

# Set to 1 if the sessionizer should insert dummy hits to the
# referring document at the beginning of each session.
sessionizeInsertReferrerHits = 1

# Name of the GET query parameter denoting the referrer (leave blank
# if not applicable)
sessionizeQueryReferrerName = referrer

# Should a foreign referrer start a new session?
sessionizeForeignReferrerStartsSession = no


# ===========================================================================
# Statistics
# ---------------------------------------------------------------------------
# The script logStatistics.pl takes its options from the following section.
# ===========================================================================

[statisticsSettings]

# Filename extension for the output files of the statistics script
statisticsOutputExtension = .stats

# Export histogram data etc.? (numeric boolean)
statisticsExport = 1

# The HTML template file for the report
statisticsTemplateFile = WumPrepStatisticsTemplate.html


# ===========================================================================
# Remove robots
# ---------------------------------------------------------------------------
# The settings in this section control the script "removeRobots.pl"
# ===========================================================================

[rmRobotsSettings]

# The robots database. If you don't provide a filename here, the script
# tries to find the default robot database "indexers.lst" in the script
# directory.  ATTENTION: There is no syntax-check performed on the robots
# database. If you want to write your own database file or modify an
# existing one, have a look at the default file for an example.
rmRobotsDB = indexers.lst


# The filename extension that should be added to the output file of the
# removeRobots script. If left blank, the input file will be replaced.
rmRobotsOutputExtension = .nobots


# Hotst with a too high request frequency probably aren't human.  We
# can find them by checking the maxPageViewTime.  rmRobotsMaxViewTime
# defines the longest page view time in seconds that is allowed during
# a session.
rmRobotsMaxViewTime = 2


# ===========================================================================
# Map taxonomies
# ---------------------------------------------------------------------------
# The settings in this section control how the "mapTaxonomies.pl" script
# works.
# ===========================================================================

[mapTaxonomiesSettings]

# The filename extension that should be added to the output file of the
# mapTaxonomies script. If left blank, the input file will be replaced.

taxonoMapOutputExtension = .mapped

# Log file for the taxonomy mapper
taxonoMapLog = mapping.log

# The files listed after the following label contain taxonomy maps.
# If multiple files are given, the mappings in all of the files are applied
# to the log before the output is written.
taxonomyDefs =...
regexpr.txt



# ===========================================================================
# Transform log
# ---------------------------------------------------------------------------
# The settings in this section control how the "transformLog.pl" script
# works.
# ===========================================================================

[transformSettings]

# The filename extension that should be added to the output file of the
# transformLog script. If left blank, the input file will be replaced.

transformOutputExtension = .csv

# The transformation mode. SEQUENCE simply converts the log from one
# format to anoter. SESSION_VECTOR transforms a sessionized log (!)
# into vector form with one session per line and the possible values
# for PATH as dimensions.

transformMode = SEQUENCE

# The template for the transform output in SEQUENCE mode

transformTemplate = logfileTemplate.csv

# The output file for SESSION_VECTOR mode

transformSessionVectorFile = sessionVectors.csv
